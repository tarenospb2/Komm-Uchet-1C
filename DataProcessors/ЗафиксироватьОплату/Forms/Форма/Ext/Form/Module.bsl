
&НаСервере
Процедура ЗагрузитьДанныеНаСервере()
	
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
		Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КвартирыСчетчики.Счетчик КАК Счетчик,
		|	КвартирыСчетчики.ТипТарифа КАК ТипТарифа,
		|	КвартирыСчетчики.РесурсоснабжающаяОрганизация КАК РесурсоснабжающаяОрганизация,
		|	КвартирыСчетчики.Счетчик.ТипСчетчика КАК СчетчикТипСчетчика,
		|	КвартирыСчетчики.ТолькоПоказания КАК ТолькоПоказания
		|ПОМЕСТИТЬ Организации
		|ИЗ
		|	Справочник.Квартиры.Счетчики КАК КвартирыСчетчики
		|ГДЕ
		|	КвартирыСчетчики.ВАрхиве = &ВАрхиве
		|	И КвартирыСчетчики.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	"""",
		|	КвартирыОбслуживание.ТипТарифа,
		|	КвартирыОбслуживание.РесурсоснабжающаяОрганизация,
		|	0,
		|	КвартирыОбслуживание.ТолькоПоказания
		|ИЗ
		|	Справочник.Квартиры.Обслуживание КАК КвартирыОбслуживание
		|ГДЕ
		|	КвартирыОбслуживание.Ссылка = &Ссылка
		|	И КвартирыОбслуживание.ВАрхиве = &ВАрхиве
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Организации.Счетчик КАК Счетчик,
		|	Организации.РесурсоснабжающаяОрганизация КАК РесурсоснабжающаяОрганизация,
		|	Организации.ТипТарифа КАК ТипТарифа,
		|	ЕСТЬNULL(ТарифыСрезПоследних.ЗначениеПервое, 0) КАК ЗначениеТарифаПервое,
		|	ЕСТЬNULL(ТарифыСрезПоследних.ЗначениеВторое, 0) КАК ЗначениеТарифаВторое,
		|	Организации.Счетчик.Представление КАК СчетчикПредставление,
		|	ЕСТЬNULL(ПоказанияРегистрСрезПоследних.ЗначениеПервое, 0) - ЕСТЬNULL(ПоказанияРегистрСрезПоследнихНачало.ЗначениеПервое, 0) КАК ПоказанияЗначениеПервое,
		|	ЕСТЬNULL(ПоказанияРегистрСрезПоследних.ЗначениеВторое, 0) - ЕСТЬNULL(ПоказанияРегистрСрезПоследнихНачало.ЗначениеВторое, 0) КАК ПоказанияЗначениеВторое,
		|	Организации.РесурсоснабжающаяОрганизация.КрайняяДатаОплаты КАК РесурсоснабжающаяОрганизацияКрайняяДатаОплаты,
		|	Организации.СчетчикТипСчетчика КАК СчетчикТипСчетчика,
		|	Организации.ТолькоПоказания КАК ТолькоПоказания,
		|	ЕСТЬNULL(ПлатежиКвартираОбороты.ТипТарифа, 0) КАК ТарифОплачен
		|ИЗ
		|	Организации КАК Организации
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Тарифы.СрезПоследних(
		|				&Дата,
		|				(РесурсоснабжающаяОрганизация, ТипТарифа) В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						Организации.РесурсоснабжающаяОрганизация КАК РесурсоснабжающаяОрганизация,
		|						Организации.ТипТарифа КАК ТипТарифа
		|					ИЗ
		|						Организации КАК Организации)) КАК ТарифыСрезПоследних
		|		ПО Организации.РесурсоснабжающаяОрганизация = ТарифыСрезПоследних.РесурсоснабжающаяОрганизация
		|			И Организации.ТипТарифа = ТарифыСрезПоследних.ТипТарифа
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПоказанияРегистр.СрезПоследних(
		|				&Дата,
		|				Счетчик В
		|					(ВЫБРАТЬ
		|						Организации.Счетчик КАК Счетчик
		|					ИЗ
		|						Организации КАК Организации)) КАК ПоказанияРегистрСрезПоследних
		|		ПО Организации.Счетчик = ПоказанияРегистрСрезПоследних.Счетчик
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПоказанияРегистр.СрезПоследних(
		|				&НачалоМес,
		|				Счетчик В
		|					(ВЫБРАТЬ
		|						Организации.Счетчик КАК Счетчик
		|					ИЗ
		|						Организации КАК Организации)) КАК ПоказанияРегистрСрезПоследнихНачало
		|		ПО Организации.Счетчик = ПоказанияРегистрСрезПоследнихНачало.Счетчик
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПлатежиКвартира.Обороты(
		|				,
		|				,
		|				,
		|				Квартира = &Ссылка
		|					И ПериодОплаты = &ПО) КАК ПлатежиКвартираОбороты
		|		ПО Организации.ТипТарифа = ПлатежиКвартираОбороты.ТипТарифа
		|ГДЕ
		|	Организации.ТолькоПоказания = ЛОЖЬ
		|
		|УПОРЯДОЧИТЬ ПО
		|	РесурсоснабжающаяОрганизацияКрайняяДатаОплаты";
	
	Запрос.УстановитьПараметр("ВАрхиве", Ложь);
	Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	Запрос.УстановитьПараметр("НачалоМес", ДобавитьМесяц(НачалоМесяца(ТекущаяДата()),-1));
	Запрос.УстановитьПараметр("Ссылка", Объект.Квартира);
	Запрос.УстановитьПараметр("ПО", Строка(Месяц( ТекущаяДата())) + "-"+Строка(Год( ТекущаяДата())));

	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	НомерОплаты = 0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.ТарифОплачен <> 0 Тогда
			 
			Продолжить;
			 
		КонецЕсли;
		 
		 
		Показания1 = ВыборкаДетальныеЗаписи.ПоказанияЗначениеПервое;
		Показания2 = ВыборкаДетальныеЗаписи.ПоказанияЗначениеВторое;
			 
		СуммаОплаты1 = ВыборкаДетальныеЗаписи.ЗначениеТарифаПервое;
		СуммаОплаты2 = 0;
			  
		Если ВыборкаДетальныеЗаписи.ТипТарифа = Перечисления.ТипыТарифов.Электроэнергия Тогда
			  СуммаОплаты1 = Показания1 * ВыборкаДетальныеЗаписи.ЗначениеТарифаПервое;
			  СуммаОплаты2 = Показания2 * ВыборкаДетальныеЗаписи.ЗначениеТарифаВторое;
		КонецЕсли;
		Если ВыборкаДетальныеЗаписи.ТипТарифа = Перечисления.ТипыТарифов.ХолоднаяВода ИЛИ ВыборкаДетальныеЗаписи.ТипТарифа = Перечисления.ТипыТарифов.ГорячаяВода Тогда
			  СуммаОплаты1 = Показания1 * ВыборкаДетальныеЗаписи.ЗначениеТарифаПервое;
			  СуммаОплаты2 = 0; 
		КонецЕсли;
		Если ВыборкаДетальныеЗаписи.ТипТарифа = Перечисления.ТипыТарифов.ОбслуживаниеДома Тогда
		    Отбор = Новый Структура;
			Отбор.Вставить("Квартира", Объект.Квартира);
			Отбор.Вставить("Тариф",  Перечисления.ТипыТарифов.ОбслуживаниеДома);
			ПеремТариф = РегистрыСведений.ТарифыПеременные.Получить(Отбор).Сумма;
		КонецЕсли;
		
		ПараметрыРеквизитов = Новый Структура; 
		НомерОплаты = НомерОплаты + 1;
		ПараметрыРеквизитов.Вставить("пар1",НомерОплаты);
		ПараметрыРеквизитов.Вставить("пар2",ВыборкаДетальныеЗаписи.РесурсоснабжающаяОрганизация);
		ПараметрыРеквизитов.Вставить("пар3",ВыборкаДетальныеЗаписи.ТипТарифа);
		ПараметрыРеквизитов.Вставить("пар4",ВыборкаДетальныеЗаписи.СчетчикПредставление);
		ПараметрыРеквизитов.Вставить("пар5",Показания1);
			
		Если ВыборкаДетальныеЗаписи.ТипТарифа = Перечисления.ТипыТарифов.ОбслуживаниеДома Тогда 
			ПараметрыРеквизитов.Вставить("пар6",ПеремТариф);
		Иначе
			ПараметрыРеквизитов.Вставить("пар6",СуммаОплаты1); 
		КонецЕсли;
					  
		ПараметрыРеквизитов.Вставить("пар7",Показания2); 
		ПараметрыРеквизитов.Вставить("пар8",СуммаОплаты2);
		ПараметрыРеквизитов.Вставить("пар0",ВыборкаДетальныеЗаписи.РесурсоснабжающаяОрганизацияКрайняяДатаОплаты); 
		ПараметрыРеквизитов.Вставить("пар9",ВыборкаДетальныеЗаписи.СчетчикТипСчетчика);
			
		СоздатьРеквизитыФормы(ПараметрыРеквизитов);
		
	КонецЦикла;
	
	Если НомерОплаты > 0 Тогда
	
		Элементы.УказатьОплату.Видимость = Истина;
	Иначе
		Сообщить("Все платежи выполнены!");
	КонецЕсли;
	
	
    //}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецПроцедуры

&НаСервере
Процедура СоздатьРеквизитыФормы(ПараметрыРеквизитов)
	
	НовыеРеквизиты = Новый Массив;
	
	ТарифДатаРеквизит = Новый РеквизитФормы("ТарифДата_" + ПараметрыРеквизитов["пар1"], Новый ОписаниеТипов("Строка"));
	НовыеРеквизиты.Добавить(ТарифДатаРеквизит);
	
	ОплатаРеквизит = Новый РеквизитФормы("ОплатаПервая_" + ПараметрыРеквизитов["пар1"], Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(12,2)));
	НовыеРеквизиты.Добавить(ОплатаРеквизит);
	
	Если ПараметрыРеквизитов["пар9"] = Перечисления.ТипыСчетчиков.ДвухпозиционныйЭЭ Тогда
		
		ОплатаРеквизит = Новый РеквизитФормы("ОплатаВторая_" + ПараметрыРеквизитов["пар1"], Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(12,2)));
		НовыеРеквизиты.Добавить(ОплатаРеквизит);
		
	КонецЕсли;
	
	ОплатитьСейчасРеквизит = Новый РеквизитФормы("ОплатитьСейчас_" + ПараметрыРеквизитов["пар1"], Новый ОписаниеТипов("Булево")); 
	НовыеРеквизиты.Добавить(ОплатитьСейчасРеквизит);
	
	ЭтотОбъект.ИзменитьРеквизиты(НовыеРеквизиты);     
	ЭтотОбъект["ОплатаПервая_" + ПараметрыРеквизитов["пар1"]] = ПараметрыРеквизитов["пар6"];
	
	Если ПараметрыРеквизитов["пар9"] = Перечисления.ТипыСчетчиков.ДвухпозиционныйЭЭ Тогда
		ЭтотОбъект["ОплатаВторая_" + ПараметрыРеквизитов["пар1"]] = ПараметрыРеквизитов["пар8"];
	КонецЕсли;
	
	Если ПараметрыРеквизитов["пар3"] = Перечисления.ТипыТарифов.Водоотведение Тогда 
		ОбъемВодоотведения1 = РегистрыСведений.Водоотведение.ПолучитьПоследнее(ДобавитьМесяц(НачалоМесяца(ТекущаяДата()),-2), Новый Структура("Квартира", Объект.Квартира)).Объем;
		ОбъемВодоотведения2 = РегистрыСведений.Водоотведение.ПолучитьПоследнее(НачалоМесяца(ТекущаяДата())-1, Новый Структура("Квартира", Объект.Квартира)).Объем;
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("ТипТарифа", Перечисления.ТипыТарифов.ХолоднаяВода);
		СтруктураПоиска.Вставить("РесурсоснабжающаяОрганизация", ПараметрыРеквизитов["пар2"]);
		ТарифВодоотведения = РегистрыСведений.Тарифы.ПолучитьПоследнее(Объект.Дата, СтруктураПоиска).ЗначениеПервое;
		ЭтотОбъект["ОплатаПервая_" + ПараметрыРеквизитов["пар1"]] = (ОбъемВодоотведения2-ОбъемВодоотведения1) * ТарифВодоотведения;
	КонецЕсли;
	
    СоздатьЭлементыФормы(ПараметрыРеквизитов);

КонецПроцедуры 

&НаСервере
Процедура СоздатьЭлементыФормы(ПараметрыРеквизитов)

	ОплатыГруппа = ЭтаФорма.Элементы.Добавить("ГруппаПлатежа"+ПараметрыРеквизитов["пар1"], Тип("ГруппаФормы"),Элементы.НовГруппа);
	ОплатыГруппа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ОплатыГруппа.Заголовок = Строка(ПараметрыРеквизитов["пар2"]) +" (" + Строка(ПараметрыРеквизитов["пар3"]) + ")";
	ОплатыГруппа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная; 
	
	ЭлементФормы = ЭтаФорма.Элементы.Добавить("ТарифДата_" + ПараметрыРеквизитов["пар1"], Тип("ПолеФормы"),ОплатыГруппа); 
	ЭтотОбъект["ТарифДата_" + ПараметрыРеквизитов["пар1"]] = "Крайняя дата передачи показаний: " + ПараметрыРеквизитов["пар0"] + " число каждого месяца";
	ЭлементФормы.ПутьКДанным = "ТарифДата_"+ПараметрыРеквизитов["пар1"]; 
	ЭлементФормы.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	ЭлементФормы.Вид = ВидПоляФормы.ПолеВвода;
	ЭлементФормы.Доступность = Ложь;
	ЭлементФормы.ЦветРамки = WindowsЦвета.ФонОкна;
	
	ОплатыПоказанийГруппа = ЭтаФорма.Элементы.Добавить("ГруппаПоказанийПлатежа"+ПараметрыРеквизитов["пар1"], Тип("ГруппаФормы"),ОплатыГруппа);
	ОплатыПоказанийГруппа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ОплатыПоказанийГруппа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда; 
	
	ЭлементФормы = ЭтаФорма.Элементы.Добавить("ПлатежПервый_" +ПараметрыРеквизитов["пар1"], Тип("ПолеФормы"),ОплатыПоказанийГруппа);
	ЭлементФормы.Заголовок = "Сумма оплаты";
	ЭлементФормы.ПутьКДанным = "ОплатаПервая_"+ПараметрыРеквизитов["пар1"];
	ЭлементФормы.Вид = ВидПоляФормы.ПолеВвода; 
	
	Если ПараметрыРеквизитов["пар9"] <> 0 Тогда
		ЭлементФормы.Подсказка = Строка(ПараметрыРеквизитов["пар6"]) + " руб. за показания " + Строка(ПараметрыРеквизитов["пар5"]);
	КонецЕсли;
	
	Если ПараметрыРеквизитов["пар9"] = Перечисления.ТипыСчетчиков.ДвухпозиционныйЭЭ Тогда
		
		ЭлементФормы = ЭтаФорма.Элементы.Добавить("ПлатежВторой_" +ПараметрыРеквизитов["пар1"], Тип("ПолеФормы"),ОплатыПоказанийГруппа);
		ЭлементФормы.Заголовок = "Сумма оплаты";
		ЭлементФормы.Подсказка = Строка(ПараметрыРеквизитов["пар8"]) + " руб. за показания " + Строка(ПараметрыРеквизитов["пар7"]);
		ЭлементФормы.ПутьКДанным = "ОплатаВторая_"+ПараметрыРеквизитов["пар1"];
		ЭлементФормы.Вид = ВидПоляФормы.ПолеВвода; 
		
	КонецЕсли; 
	
	//создание чекбокса на оплату
	ЭлементФормы = ЭтаФорма.Элементы.Добавить("ОплатитьСейчас_" +ПараметрыРеквизитов["пар1"], Тип("ПолеФормы"),ОплатыПоказанийГруппа);
	ЭлементФормы.Заголовок = "Оплатить сейчас";
	ЭлементФормы.ПутьКДанным = "ОплатитьСейчас_"+ПараметрыРеквизитов["пар1"];
	ЭлементФормы.Вид = ВидПоляФормы.ПолеФлажка; 
	ЭлементФормы.УстановитьДействие("ПриИзменении", "ОплатитьСейчасПриИзменении");
		  
КонецПроцедуры

&НаКлиенте
Процедура ОплатитьСейчасПриИзменении(Элемент)
	
	Если ЭтотОбъект[Элемент.Имя] = Истина Тогда
		ЭтаФорма.Элементы[Элемент.Родитель.Родитель.Имя].ЦветФона = Новый Цвет(5,218,255);
	Иначе	
		ЭтаФорма.Элементы[Элемент.Родитель.Родитель.Имя].ЦветФона = Новый Цвет(-1,-1,-1);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанные(Команда)
	ЗагрузитьДанныеНаСервере();
КонецПроцедуры

&НаСервере
Процедура УказатьОплатуНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КвартирыСчетчики.ТипТарифа КАК ТипТарифа,
		|	КвартирыСчетчики.Счетчик.Представление КАК РесурсоснабжающаяОрганизацияПредставление,
		|	КвартирыСчетчики.Счетчик.ТипСчетчика КАК СчетчикТипСчетчика,
		|	КвартирыСчетчики.ТолькоПоказания КАК ТолькоПоказания,
		|	КвартирыСчетчики.РесурсоснабжающаяОрганизация.КрайняяДатаОплаты КАК РесурсоснабжающаяОрганизацияКрайняяДатаОплаты
		|ПОМЕСТИТЬ Оплаты
		|ИЗ
		|	Справочник.Квартиры.Счетчики КАК КвартирыСчетчики
		|ГДЕ
		|	КвартирыСчетчики.ВАрхиве = &ВАрхиве
		|	И КвартирыСчетчики.Ссылка = &Ссылка
		|	И КвартирыСчетчики.ТолькоПоказания = ЛОЖЬ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КвартирыОбслуживание.ТипТарифа,
		|	КвартирыОбслуживание.РесурсоснабжающаяОрганизация.Представление,
		|	0,
		|	КвартирыОбслуживание.ТолькоПоказания,
		|	КвартирыОбслуживание.РесурсоснабжающаяОрганизация.КрайняяДатаОплаты
		|ИЗ
		|	Справочник.Квартиры.Обслуживание КАК КвартирыОбслуживание
		|ГДЕ
		|	КвартирыОбслуживание.Ссылка = &Ссылка
		|	И КвартирыОбслуживание.ВАрхиве = &ВАрхиве
		|	И КвартирыОбслуживание.ТолькоПоказания = ЛОЖЬ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Оплаты.ТипТарифа КАК ТипТарифа,
		|	Оплаты.РесурсоснабжающаяОрганизацияПредставление КАК РесурсоснабжающаяОрганизацияПредставление,
		|	Оплаты.СчетчикТипСчетчика КАК СчетчикТипСчетчика,
		|	Оплаты.ТолькоПоказания КАК ТолькоПоказания,
		|	Оплаты.РесурсоснабжающаяОрганизацияКрайняяДатаОплаты КАК РесурсоснабжающаяОрганизацияКрайняяДатаОплаты,
		|	ЕСТЬNULL(ПлатежиКвартираОбороты.ТипТарифа, 0) КАК ТарифОплачен
		|ИЗ
		|	Оплаты КАК Оплаты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПлатежиКвартира.Обороты(
		|				,
		|				,
		|				,
		|				Квартира = &Ссылка
		|					И ПериодОплаты = &ПО) КАК ПлатежиКвартираОбороты
		|		ПО Оплаты.ТипТарифа = ПлатежиКвартираОбороты.ТипТарифа
		|
		|УПОРЯДОЧИТЬ ПО
		|	РесурсоснабжающаяОрганизацияКрайняяДатаОплаты";
	
	Запрос.УстановитьПараметр("ВАрхиве", Ложь);
	Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	Запрос.УстановитьПараметр("Ссылка", Объект.Квартира);
	Запрос.УстановитьПараметр("ПО", Строка(Месяц( ТекущаяДата())) + "-"+Строка(Год( ТекущаяДата())));
	
	РезультатЗапроса = Запрос.Выполнить();	
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	НомерОплаты = 0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ВыборкаДетальныеЗаписи.ТарифОплачен <> 0 Тогда
			 
			 	 Продолжить;
			 
			 КонецЕсли;
		
		 НомерОплаты = НомерОплаты + 1;
		 
		 Если ЭтотОбъект["ОплатитьСейчас_" + НомерОплаты] = Ложь Тогда
		 
		 	 Продолжить;
		 
		 КонецЕсли;
		
		Если ВыборкаДетальныеЗаписи.СчетчикТипСчетчика = Перечисления.ТипыСчетчиков.ДвухпозиционныйЭЭ Тогда
		
			СуммаКОплате = ЭтаФорма["ОплатаПервая_"+НомерОплаты] + ЭтаФорма["ОплатаВторая_"+НомерОплаты];
		Иначе
			СуммаКОплате = ЭтаФорма["ОплатаПервая_"+НомерОплаты]; 
		КонецЕсли;  
		
		  НачатьТранзакцию();
	
	Попытка
		
		Регистратор = Документы.ОсуществитьОплату.СоздатьДокумент();
		
		Регистратор.Дата = ТекущаяДата();
		Регистратор.Квартира =  Объект.Квартира;
		Регистратор.ТипТарифа = ВыборкаДетальныеЗаписи.ТипТарифа;
		Регистратор.Сумма = СуммаКОплате; 
		Регистратор.Записать(РежимЗаписиДокумента.Проведение); 
		
		ЗафиксироватьТранзакцию(); 
		Сообщить("Сведения об оплате за " + ВыборкаДетальныеЗаписи.ТипТарифа +" переданы успешно");
		Исключение
			ОтменитьТранзакцию();
			Сообщить("Сведения об оплате за " + ВыборкаДетальныеЗаписи.ТипТарифа +" не переданы");
		КонецПопытки;
		
		//обновление переменного тарифа
		Если ВыборкаДетальныеЗаписи.ТипТарифа = Перечисления.ТипыТарифов.ОбслуживаниеДома Тогда
			Отбор = Новый Структура;
			Отбор.Вставить("Квартира", Объект.Квартира);
			Отбор.Вставить("Тариф",  Перечисления.ТипыТарифов.ОбслуживаниеДома);
			НоваяЗапись = РегистрыСведений.ТарифыПеременные.СоздатьМенеджерЗаписи();
			НоваяЗапись.Тариф = Перечисления.ТипыТарифов.ОбслуживаниеДома;
			НоваяЗапись.Квартира = Объект.Квартира;
			НоваяЗапись.Сумма = СуммаКОплате;
			НоваяЗапись.Записать(Истина);
		КонецЕсли;
		
	КонецЦикла;	 
		 
КонецПроцедуры

&НаКлиенте
Процедура УказатьОплату(Команда)
	УказатьОплатуНаСервере();
КонецПроцедуры
