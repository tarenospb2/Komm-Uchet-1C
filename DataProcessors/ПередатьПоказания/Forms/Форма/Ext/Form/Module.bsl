Перем ОнлайнЗначенияСтрукт Экспорт;

&НаСервере
Процедура ЗагрузитьДанныеНаСервере() 
	
	//глобальные параметры инициализация
	НомерСчетчика = 0;
	ПолучатьОнлайнПоказания = Ложь;
	ОбменникДляОнлайнПоказаний = "";
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КвартирыСчетчики.Счетчик.КрайняяДатаПередачиПоказаний КАК КрайняяДатаПередачиПоказаний,
		|	КвартирыСчетчики.Счетчик КАК Счетчик,
		|	КвартирыСчетчики.Счетчик.ТипСчетчика КАК СчетчикТипСчетчика
		|ПОМЕСТИТЬ Счетчики
		|ИЗ
		|	Справочник.Квартиры.Счетчики КАК КвартирыСчетчики
		|ГДЕ
		|	КвартирыСчетчики.Ссылка = &Ссылка
		|	И КвартирыСчетчики.ВАрхиве = &ВАрхиве
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Счетчики.КрайняяДатаПередачиПоказаний КАК СчетчикКрайняяДатаПередачиПоказаний,
		|	Счетчики.Счетчик.Префикс КАК СчетчикПредставление,
		|	ЕСТЬNULL(ПоказанияРегистрСрезПоследних.ЗначениеПервое, 0) КАК ЗначениеПервое,
		|	ЕСТЬNULL(ПоказанияРегистрСрезПоследних.ЗначениеВторое, 0) КАК ЗначениеВторое,
		|	Счетчики.СчетчикТипСчетчика КАК СчетчикТипСчетчика,
		|	Счетчики.Счетчик.Представление КАК СчетчикОтображение
		|ПОМЕСТИТЬ БезОнлайн
		|ИЗ
		|	Счетчики КАК Счетчики
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПоказанияРегистр.СрезПоследних(
		|				&Дата,
		|				Счетчик В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						Счетчики.Счетчик КАК Счетчик
		|					ИЗ
		|						Счетчики КАК Счетчики)) КАК ПоказанияРегистрСрезПоследних
		|		ПО Счетчики.Счетчик = ПоказанияРегистрСрезПоследних.Счетчик
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БезОнлайн.СчетчикКрайняяДатаПередачиПоказаний КАК СчетчикКрайняяДатаПередачиПоказаний,
		|	БезОнлайн.СчетчикПредставление КАК СчетчикПредставление,
		|	БезОнлайн.ЗначениеПервое КАК ЗначениеПервое,
		|	БезОнлайн.ЗначениеВторое КАК ЗначениеВторое,
		|	Квартиры.ПередаватьДанные КАК ПередаватьДанные,
		|	Квартиры.Клиент КАК Клиент,
		|	БезОнлайн.СчетчикТипСчетчика КАК СчетчикТипСчетчика,
		|	БезОнлайн.СчетчикОтображение КАК СчетчикОтображение
		|ИЗ
		|	БезОнлайн КАК БезОнлайн,
		|	Справочник.Квартиры КАК Квартиры
		|ГДЕ
		|	Квартиры.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("ВАрхиве", Ложь);
	Запрос.УстановитьПараметр("Ссылка", Объект.Квартира);
	Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
        // создание всех счетчиков квартиры на форме
		НомерСчетчика = НомерСчетчика + 1;
		СоздатьРеквизитыФормы(ВыборкаДетальныеЗаписи.СчетчикПредставление, ВыборкаДетальныеЗаписи.СчетчикОтображение,
				ВыборкаДетальныеЗаписи.СчетчикКрайняяДатаПередачиПоказаний, ВыборкаДетальныеЗаписи.СчетчикТипСчетчика,
				ВыборкаДетальныеЗаписи.ЗначениеПервое,ВыборкаДетальныеЗаписи.ЗначениеВторое);
		ПолучатьОнлайнПоказания = ВыборкаДетальныеЗаписи.ПередаватьДанные;
		ОбменникДляОнлайнПоказаний = ВыборкаДетальныеЗаписи.Клиент;
		Если НомерСчетчика = 1 И ПолучатьОнлайнПоказания = Истина Тогда
				ОнлайнЗначенияJson = КлиентОбменДанными.ПолучитьПоказанияRabbit(ОбменникДляОнлайнПоказаний);
				ОнлайнЗначенияСтрукт = ПодготовкаПоказанийВСтруктуруДля1С(ОнлайнЗначенияJson);
		КонецЕсли;
	КонецЦикла;
	
	Если НомерСчетчика > 0 Тогда
	
			Элементы.КнопкаОтправки.Видимость = Истина;
			
	// для получения показаний онлайн		
	   Если ЗначениеЗаполнено(ОнлайнЗначенияСтрукт) Тогда
	    Для каждого значениеОнлайнЗначенияСтрукт Из ОнлайнЗначенияСтрукт.pokazania Цикл
	 
			счетчик = значениеОнлайнЗначенияСтрукт["pribor"];
			показание1 = значениеОнлайнЗначенияСтрукт["Data1"];
			ЭтотОбъект[счетчик + "_1"] = показание1;
			показание2 = значениеОнлайнЗначенияСтрукт["Data2"];
			Если показание2 > 0 Тогда
					
				 ЭтотОбъект[счетчик + "_2"] = показание2;
					
			КонецЕсли;
					 
	 		КонецЦикла;
   		КонецЕсли;  
   КонецЕсли;

		
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПодготовкаПоказанийКОтправке(Клиент, Счетчики,Значения)
	
     Данные = Новый Структура;
	 
	 МассивСчетчиков = Новый Массив;  
	 Для i = 0 По Значения.Количество()-1 Цикл
	 
	 	ЗначенияСтруктура = Новый Структура;
		ЗначенияСтруктура.Вставить("client", Клиент);
		ЗначенияСтруктура.Вставить("pribor", Лев(Счетчики[i],СтрДлина(Счетчики[i])-2));
		ЗначенияСтруктура.Вставить("Data1", Значения[i]);
		Если i+1 < Значения.Количество() И Прав(Счетчики[i+1],2) = "_2" Тогда
		
			 ЗначенияСтруктура.Вставить("Data2", Значения[i+1]);
		     i = i+1;
		КонецЕсли;
		
		МассивСчетчиков.Добавить(ЗначенияСтруктура);
	 
	 КонецЦикла;
	Данные.Вставить("pokazania",МассивСчетчиков);	 
		
	 ЗаписьJSON = Новый ЗаписьJSON;
	 ЗаписьJSON.УстановитьСтроку();
	 ЗаписатьJSON(ЗаписьJSON, Данные);
	 ДанныеВФорматеJSON = ЗаписьJSON.Закрыть();
	 Возврат ДанныеВФорматеJSON;

КонецФункции // ПодготовкаПоказанийКОтправке()

&НаСервереБезКонтекста
Функция ПодготовкаПоказанийВСтруктуруДля1С(СтрокаJson)
	
	Если СтрокаJson <> "" Тогда
	
		ЧтениеJSON = Новый ЧтениеJSON;
	 ЧтениеJSON.УстановитьСтроку(СтрокаJson);
	 Структура = ПрочитатьJSON(ЧтениеJSON); 
	 ЧтениеJSON.Закрыть();
	 Сообщить("Получены показания!");
	 Возврат Структура;
	
	КонецЕсли;
	 Возврат "";

КонецФункции // ПодготовкаПоказанийВСтруктуруДля1С()


&НаСервере
Процедура СоздатьРеквизитыФормы(Счетчик, СчетчикОтображение, КрайнаяДата, Тариф,ЗначениеПервое,ЗначениеВторое)
	
	НовыеРеквизиты = Новый Массив;
    
	ДатаСчетчикаРеквизит = Новый РеквизитФормы("ДатаСчетчик_" + Счетчик, Новый ОписаниеТипов("Строка"));
	НовыеРеквизиты.Добавить(ДатаСчетчикаРеквизит);
	
	
	ПоказанияСчетчикаРеквизит = Новый РеквизитФормы(Счетчик + "_1", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(10,3))); 
		НовыеРеквизиты.Добавить(ПоказанияСчетчикаРеквизит); 
		
	
	Если Тариф = Перечисления.ТипыСчетчиков.ДвухпозиционныйЭЭ Тогда
		
		Показания2СчетчикаРеквизит = Новый РеквизитФормы(Счетчик + "_2", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(10,3)));
		НовыеРеквизиты.Добавить(Показания2СчетчикаРеквизит);

	КонецЕсли;
	
	ЭтотОбъект.ИзменитьРеквизиты(НовыеРеквизиты); 
	
	ЭтотОбъект[Счетчик + "_1"] = ЗначениеПервое;
	Если Тариф = Перечисления.ТипыСчетчиков.ДвухпозиционныйЭЭ Тогда
		
		ЭтотОбъект[Счетчик + "_2"] = ЗначениеВторое;
		
	КонецЕсли;
	СоздатьЭлементыФормы(Счетчик, СчетчикОтображение, КрайнаяДата, Тариф,ЗначениеПервое,ЗначениеВторое);

КонецПроцедуры 

&НаСервере
Процедура СоздатьЭлементыФормы(Счетчик, СчетчикОтображение, КрайнаяДата, Тариф,ЗначениеПервое,ЗначениеВторое)

	СчетчикГруппа = ЭтаФорма.Элементы.Добавить("Счетчик_"+Счетчик, Тип("ГруппаФормы"),Элементы.НовГруппа);
	СчетчикГруппа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
    СчетчикГруппа.Заголовок = "Счетчик_"+СчетчикОтображение; 
	СчетчикГруппа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная; 
	
	ЭлементФормы = ЭтаФорма.Элементы.Добавить("ДатаСчетчик_" +Счетчик, Тип("ПолеФормы"),СчетчикГруппа); 
	ЭтотОбъект["ДатаСчетчик_" +Счетчик] = "Крайняя дата передачи показаний: " + КрайнаяДата + " число каждого месяца";
	ЭлементФормы.ПутьКДанным = "ДатаСчетчик_"+Счетчик; 
	ЭлементФормы.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	ЭлементФормы.Вид = ВидПоляФормы.ПолеВвода;
	ЭлементФормы.Доступность = Ложь;
	ЭлементФормы.ЦветРамки = WindowsЦвета.ФонОкна;
	
	ЭлементФормы = ЭтаФорма.Элементы.Добавить(Счетчик +"_1", Тип("ПолеФормы"),СчетчикГруппа);
		ЭлементФормы.ПутьКДанным = Счетчик +"_1";
		ЭлементФормы.Заголовок = "Показание";
		ЭлементФормы.Подсказка = "Предыдущие показания: " + ЗначениеПервое;
		ЭлементФормы.Вид = ВидПоляФормы.ПолеВвода;
	Если Тариф = Перечисления.ТипыСчетчиков.ДвухпозиционныйЭЭ Тогда
		
		ЭлементФормы = ЭтаФорма.Элементы.Добавить(Счетчик +"_2", Тип("ПолеФормы"),СчетчикГруппа);
		ЭлементФормы.ПутьКДанным = Счетчик +"_2";
		ЭлементФормы.Заголовок = "Показание (ночь)";
		ЭлементФормы.Подсказка = "Предыдущие показания: " + ЗначениеВторое;
		ЭлементФормы.Вид = ВидПоляФормы.ПолеВвода;
		
	КонецЕсли;

КонецПроцедуры

 

&НаКлиенте
Процедура ЗагрузитьДанные(Команда)
	ЗагрузитьДанныеНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура КнопкаОтправкиНаСервере()
	
	Счетчики = Новый Массив;
	Значения = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КвартирыСчетчики.Счетчик КАК Счетчик,
		|	КвартирыСчетчики.Счетчик.Представление КАК СчетчикПредставление,
		|	КвартирыСчетчики.Счетчик.Префикс КАК СчетчикПрефикс,
		|	Квартиры.Клиент КАК Клиент,
		|	Квартиры.ПередаватьДанные КАК ПередаватьДанные,
		|	КвартирыСчетчики.Счетчик.ТипСчетчика КАК СчетчикТипСчетчика
		|ИЗ
		|	Справочник.Квартиры.Счетчики КАК КвартирыСчетчики
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Квартиры КАК Квартиры
		|		ПО КвартирыСчетчики.Ссылка = Квартиры.Ссылка
		|ГДЕ
		|	КвартирыСчетчики.Ссылка = &Ссылка
		|	И КвартирыСчетчики.ВАрхиве = &ВАрхиве";
	
	Запрос.УстановитьПараметр("ВАрхиве", Ложь);
	Запрос.УстановитьПараметр("Ссылка", Объект.Квартира);
	
	РезультатЗапроса = Запрос.Выполнить();
	ОбъемВодоотведения = 0;
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ПередаватьДанныеКвартиры = Ложь; 
	Клиент = "";
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 

		НачатьТранзакцию();
		
		Попытка
		
		Регистратор = Документы.ПередатьПоказания.СоздатьДокумент();
		Регистратор.Дата = ТекущаяДата();
		Регистратор.Счетчик =  ВыборкаДетальныеЗаписи.Счетчик;
		Регистратор.ЗначениеПервое = ЭтаФорма[ВыборкаДетальныеЗаписи.СчетчикПрефикс+"_1"];
		
		Счетчики.Добавить(ВыборкаДетальныеЗаписи.СчетчикПрефикс+"_1");
		Значения.Добавить(ЭтаФорма[ВыборкаДетальныеЗаписи.СчетчикПрефикс+"_1"]);
		
		Если ВыборкаДетальныеЗаписи.СчетчикТипСчетчика = Перечисления.ТипыСчетчиков.ДвухпозиционныйЭЭ Тогда
		
			Регистратор.ЗначениеВторое = ЭтаФорма[ВыборкаДетальныеЗаписи.СчетчикПрефикс+"_2"]; 
			
			Счетчики.Добавить(ВыборкаДетальныеЗаписи.СчетчикПрефикс+"_2");
			Значения.Добавить(ЭтаФорма[ВыборкаДетальныеЗаписи.СчетчикПрефикс+"_2"]);
		   
		КонецЕсли;
		Клиент = ВыборкаДетальныеЗаписи.Клиент;
		Если ВыборкаДетальныеЗаписи.ПередаватьДанные = Истина Тогда
			  ПередаватьДанныеКвартиры = Истина;
		КонецЕсли;
	
		Регистратор.Записать(РежимЗаписиДокумента.Проведение); 
		
		ЗафиксироватьТранзакцию(); 
		Сообщить("Показания по счетчику "+ ВыборкаДетальныеЗаписи.СчетчикПредставление +" переданы успешно");
		
		Исключение
			ОтменитьТранзакцию();
			Сообщить("Показания по счетчику "+ ВыборкаДетальныеЗаписи.СчетчикПредставление +" уже передавались в этом месяце");
			ПередаватьДанныеКвартиры = Ложь;
		КонецПопытки;
		
		Если ВыборкаДетальныеЗаписи.СчетчикТипСчетчика = Перечисления.ТипыСчетчиков.ХВ ИЛИ 
			ВыборкаДетальныеЗаписи.СчетчикТипСчетчика = Перечисления.ТипыСчетчиков.ГВ Тогда
			
			ОбъемВодоотведения = ОбъемВодоотведения + ЭтаФорма[ВыборкаДетальныеЗаписи.СчетчикПрефикс+"_1"];
						
		КонецЕсли;
	КонецЦикла; 
	
	//запись количества отведенной воды
	
	НоваяЗапись = РегистрыСведений.Водоотведение.СоздатьМенеджерЗаписи();
	НоваяЗапись.Период = ТекущаяДата();
	НоваяЗапись.Квартира = Объект.Квартира;
	НоваяЗапись.Объем = ОбъемВодоотведения;
	НоваяЗапись.Записать();
	
	// передача показаний в сервис 
		 
	Если ПередаватьДанныеКвартиры = Истина Тогда
		
		Данные = ПодготовкаПоказанийКОтправке(Клиент, Счетчики,Значения);
		Сообщить(КлиентОбменДанными.ПередачаПоказанийRabbit(Данные,Клиент,""));
		
	КонецЕсли;

	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаОтправки(Команда)
	КнопкаОтправкиНаСервере(); 
	
КонецПроцедуры
